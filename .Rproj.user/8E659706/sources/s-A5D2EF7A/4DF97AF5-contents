---
title: "Sex-dependent response calling in Thyroptera tricolor"
subtitle: "Statistical analysis"
author: <a href="http://marceloarayasalas.weebly.com/">Marcelo Araya-Salas</a>
 &nbsp; 
date: "`r Sys.Date()`"
output:
  html_document:
    code_folding: hide
    toc: no
    toc_depth: 3
    toc_float:
      collapsed: no
      smooth_scroll: no
fontsize: 12pt 
editor_options: 
  chunk_output_type: console
---


```{r packages, message=FALSE, warning = FALSE, echo = TRUE, eval = TRUE, include = FALSE}

# unload all non-based packages
out <- sapply(paste('package:', names(sessionInfo()$otherPkgs), sep = ""), function(x) try(detach(x, unload = FALSE, character.only = TRUE), silent = T))

## add 'developer/' to packages to be installed from github
x <- c("ggplot2", "readxl", "viridis", "MCMCglmm")

aa <- lapply(x, function(y) {
  
  # get pakage name
  pkg <- strsplit(y, "/")[[1]]
  pkg <- pkg[length(pkg)]
  
  # check if installed, if not then install 
  if (!pkg %in% installed.packages()[,"Package"])  {

      if (grepl("/", y))  devtools::install_github(y, force = TRUE) else
    install.packages(y) 
    }

  # load package
  try(require(pkg, character.only = T), silent = T)
})

```

```{r functions, eval = TRUE, echo = TRUE}

# path to project directory
knitr::opts_knit$set(root.dir = normalizePath(".."))

# fig quality
knitr::opts_chunk$set(dpi = 50, fig.width = 12) 

```

## Exploratory graphs
```{r read data, fig.height = 6}

# read data
dat <- read_excel("./data/Datos de respuestas_cap2.xlsx")

# convert to regular data frame
dat <- as.data.frame(dat)

# create new variable abou
dat$est_repr[dat$estado_repr == 0] <- "Inactivo"
dat$est_repr[dat$estado_repr == 1] <- "Activo"

# aggregate total number of calls
agg_dat <- aggregate(n_llamadas ~ ID + sexo_consulta + sexo_respuesta + est_repr, data = dat, FUN = sum)

# plot
ggplot(agg_dat, aes(fill = sexo_consulta, y = n_llamadas, x = sexo_respuesta)) +
geom_boxplot() +
  scale_fill_viridis_d(alpha = 0.7, begin = 0.4) +
theme_classic(base_size = 24) +
  labs(x = "Sexo respuesta", y = "Numero de llamadas")+
facet_wrap(~ est_repr) + ggtitle("Total de llamadas")


# create binary variable for calling
dat$n_llam_bin <- ifelse(dat$n_llamadas > 0, 1, 0)

# aggregate
agg_dat2 <- aggregate(n_llam_bin ~ ID + sexo_consulta + sexo_respuesta + est_repr, data = dat, FUN = sum)

#plot 
ggplot(agg_dat2, aes(fill = sexo_consulta, y = n_llam_bin, x = sexo_respuesta)) +
  geom_boxplot() +
  scale_fill_viridis_d(alpha = 0.7, begin = 0.4) +
  theme_classic(base_size = 24) +
  labs(x = "Sexo respuesta", y = "Cuenta de experimentos con respuesta")+
facet_wrap(~ est_repr) + ggtitle("Experimentos con respuesta")

```


## Multinomial mixed effect models (MCMCglmm)

- Including three-way interaction between 'sex response', 'sex inquiry' and 'reproductive stage':

```{r}

# define parmeters for MCMCglmm models
itrns <- 300000
burnin <- 3000
thin <- 1000

# prior for effect models
pr <- list(B = list(mu = rep(0, 8), V = diag(8) * (1 + pi^2/3)), R = list(V = 1, fix = 1),  G = list(G1 = list(V = 1, fix = 1)))

# run model
md <- MCMCglmm(n_llam_bin ~ sexo_respuesta:est_repr:sexo_consulta  - 1, random = ~ ID, data = dat, family = "categorical", prior = pr, verbose = FALSE, nitt = itrns, start = list(QUASI = FALSE), burnin = burnin, thin = thin)



```

# Caculating p-values:

The output contains the posterior distribution of the parameter estimates. These parameter distributions can be used to test specific hypothesis about differences between sexes/stages/inquiry sexes. Column names in `md$Sol` (solutions) refer to the combination of levels from the 3 interacting variables:

```{r, fig.height = 14}

# simplify names
colnames(md$Sol) <- gsub("sexo_respuesta|est_repr", "", colnames(md$Sol))

colnames(md$Sol)

# stack posteriors
Y <- stack(as.data.frame(md$Sol))

# plot posteriors
ggplot(Y, aes(x=values)) + 
  geom_vline(xintercept = 0, col = "red", lty = 2) +
  geom_density() + 
  labs(y = "Density", x = "Posterior") +
  facet_wrap(~ ind, ncol = 2) +
  theme_classic(base_size = 24)

```

Estimates of the overlap of posteriors can be used a statistical significance test. For instance we can compare calling activity between sexes during the active stage:


```{r}

# get p value
p.val <- sum(md$Sol[, "M:Activo:sexo_consultaH"] - md$Sol[, "H:Activo:sexo_consultaH"] < 0) / nrow(md$Sol)

p.val

# plot distributions
ggplot(Y[Y$ind %in% c("H:Activo:sexo_consultaH", "M:Activo:sexo_consultaH"), ], aes(x=values)) + geom_density(aes(group = ind, colour = ind, fill = ind), alpha=0.3) + 
      scale_color_viridis_d(alpha = 0.7, begin = 0.4, end = 0.8) +
    scale_fill_viridis_d(alpha = 0.7, begin = 0.4, end = 0.8) +
  labs(y = "Density", x = "Posterior") +
  theme_classic(base_size = 24)

```

Or whether males responde more to females during the reproductive stage:

```{r}

# p value
p.val <- sum(md$Sol[, "M:Activo:sexo_consultaH"] - md$Sol[, "M:Inactivo:sexo_consultaH"] < 0) / nrow(md$Sol)

p.val

# plot distributions
ggplot(Y[Y$ind %in% c("M:Activo:sexo_consultaM", "M:Inactivo:sexo_consultaM"), ], aes(x=values)) + geom_density(aes(group = ind, colour = ind, fill = ind), alpha=0.3) + 
    scale_color_viridis_d(alpha = 0.7, begin = 0.4, end = 0.8) +
    scale_fill_viridis_d(alpha = 0.7, begin = 0.4, end = 0.8) +
    labs(y = "Density", x = "Posterior") +
  theme_classic(base_size = 24)

```


#### Diagnostic plots

```{r diagnostic plots for model, fig.height = 14}

plot(md$Sol)


```


---

<font size="4">R session information</font>

```{r session info, echo=F}

sessionInfo()

```
